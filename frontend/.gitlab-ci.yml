include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'

cache:
  paths:
    - frontend/dist/frontend

variables:
  VERSION: 1.0.$CI_PIPELINE_ID

stages:
   - test-sonar-qube
   - build
   - release
   - deploy

sonarqube-sast:
  stage: test-sonar-qube
  only:
    changes:
    - frontend/*
  image: gitlab.praktikum-services.ru:5050/std-012-005/sausage-store/sonarsource/sonar-scanner-cli:latest
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=true
      -Dsonar.projectName=12_АЛЕКСАНДРОГАНОВ_ФРОНТЕНД
      -Dsonar.projectKey=$SONAR_QUBE_PROJECT_KEY_FRONTEND
      -Dsonar.sources=./frontend
      -Dsonar.host.url=$SONAR_QUBE_URL
      -Dsonar.login=$SONAR_QUBE_TOKEN_FRONTEND

build:
  stage: build
  image: gitlab.praktikum-services.ru:5050/std-012-005/sausage-store/docker:20.10.12-dind-rootless
  only:
    changes:
    - frontend/*
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:        
    - cd frontend
    - docker build --build-arg VERSION=$VERSION --tag $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA .
    - docker push $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA

release:
  stage: release
  variables:
    GIT_STRATEGY: none
  image: gitlab.praktikum-services.ru:5050/std-012-005/sausage-store/docker:20.10.12-dind-rootless
  only:
    changes:
    - frontend/*
  needs:
    - build
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA
    - docker tag $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE/sausage-frontend:latest
    - docker push $CI_REGISTRY_IMAGE/sausage-frontend:latest

deploy:
  stage: deploy
  image: gitlab.praktikum-services.ru:5050/std-012-005/sausage-store/alpine:3.15.0
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: manual
    - if: '$CI_COMMIT_BRANCH == "nginx_front"'
      when: manual
  before_script:
    - apk add openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh ${DEV_USER}@${DEV_HOST}
      "export "VERSION=${VERSION}";
      /bin/bash -s " < ./frontend/deploy.sh
